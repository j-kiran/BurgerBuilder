{"ast":null,"code":"import _objectSpread from \"/home/kiran/burgerbuild/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionType from '../actions/actionTypes';\nvar initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionType.PURCHASE_INIT:\n      return _objectSpread({}, state, {\n        purchased: false\n      });\n\n    case actionType.PURCHASE_BURGER_START:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case actionType.PURCHASE_BURGER_SUCCESS:\n      var newOrder = _objectSpread({}, action.orderData, {\n        id: action.orderId\n      });\n\n      return _objectSpread({}, state, {\n        loading: false,\n        purchased: true,\n        orders: state.orders.concat(newOrder)\n      });\n\n    case actionType.PURCHASE_BURGER_FAIL:\n      return _objectSpread({}, state, {\n        loading: false\n      });\n\n    case actionType.FETCH_ORDERS_START:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case actionType.FETCH_ORDERS_SUCCESS:\n      return _objectSpread({}, state, {\n        orders: action.orders,\n        loading: false\n      });\n\n    case actionType.FETCH_ORDERS_FAIL:\n      return _objectSpread({}, state, {\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/kiran/burgerbuild/src/store/reducers/order.js"],"names":["actionType","initialState","orders","loading","purchased","reducer","state","action","type","PURCHASE_INIT","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","newOrder","orderData","id","orderId","concat","PURCHASE_BURGER_FAIL","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL"],"mappings":";AAAA,OAAO,KAAKA,UAAZ,MAA4B,wBAA5B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,SAAS,EAAE;AAHM,CAArB;;AAMA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1BL,YAA0B;AAAA,MAAZM,MAAY;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,UAAU,CAACS,aAAhB;AACI,+BACOH,KADP;AAEIF,QAAAA,SAAS,EAAE;AAFf;;AAKJ,SAAKJ,UAAU,CAACU,qBAAhB;AACI,+BACOJ,KADP;AAEIH,QAAAA,OAAO,EAAE;AAFb;;AAKJ,SAAKH,UAAU,CAACW,uBAAhB;AAEA,UAAMC,QAAQ,qBACPL,MAAM,CAACM,SADA;AAEVC,QAAAA,EAAE,EAAEP,MAAM,CAACQ;AAFD,QAAd;;AAII,+BACOT,KADP;AAEIH,QAAAA,OAAO,EAAE,KAFb;AAGIC,QAAAA,SAAS,EAAE,IAHf;AAIIF,QAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAN,CAAac,MAAb,CAAoBJ,QAApB;AAJZ;;AAMJ,SAAKZ,UAAU,CAACiB,oBAAhB;AACI,+BACOX,KADP;AAEIH,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAKH,UAAU,CAACkB,kBAAhB;AACI,+BACOZ,KADP;AAEIH,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAKH,UAAU,CAACmB,oBAAhB;AACI,+BACOb,KADP;AAEIJ,QAAAA,MAAM,EAAEK,MAAM,CAACL,MAFnB;AAGIC,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKH,UAAU,CAACoB,iBAAhB;AACI,+BACOd,KADP;AAEIH,QAAAA,OAAO,EAAE;AAFb;;AAOJ;AACI,aAAOG,KAAP;AAlDR;AAoDH,CArDD;;AAuDA,eAAeD,OAAf","sourcesContent":["import * as actionType from '../actions/actionTypes';\n\nconst initialState = {\n    orders: [],\n    loading: false, \n    purchased: false\n}\n\nconst reducer = (state = initialState, action ) => {\n    switch (action.type) {\n        case actionType.PURCHASE_INIT:\n            return {\n                ...state,\n                purchased: false\n\n            };\n        case actionType.PURCHASE_BURGER_START:\n            return {\n                ...state,\n                loading: true\n            };\n\n        case actionType.PURCHASE_BURGER_SUCCESS:\n\n        const newOrder = {\n            ...action.orderData,\n            id: action.orderId\n        }\n            return {\n                ...state,\n                loading: false,\n                purchased: true,\n                orders: state.orders.concat(newOrder)\n            };\n        case actionType.PURCHASE_BURGER_FAIL:\n            return {\n                ...state,\n                loading: false\n            };\n        case actionType.FETCH_ORDERS_START:\n            return {\n                ...state,\n                loading: true\n            };\n        case actionType.FETCH_ORDERS_SUCCESS:\n            return {\n                ...state,\n                orders: action.orders,\n                loading: false\n            };\n        case actionType.FETCH_ORDERS_FAIL:\n            return {\n                ...state,\n                loading: false\n            }\n\n\n            \n        default:\n            return state;\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}