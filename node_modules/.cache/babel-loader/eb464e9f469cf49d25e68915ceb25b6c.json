{"ast":null,"code":"import _objectSpread from \"/home/kiran/burgerbuilder/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/kiran/burgerbuilder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/kiran/burgerbuilder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/kiran/burgerbuilder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/kiran/burgerbuilder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/kiran/burgerbuilder/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/kiran/burgerbuilder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/spinner/spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport axios from '../../axios-orders';\nimport * as actionTypes from '../../store/actions';\n\nvar BurgerBuilder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BurgerBuilder, _Component);\n\n  function BurgerBuilder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BurgerBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BurgerBuilder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      totalPrice: 4,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    _this.purchaseHandler = function () {\n      _this.setState({\n        purchasing: true\n      });\n    };\n\n    _this.purchaseCancelHandler = function () {\n      _this.setState({\n        purchasing: false\n      });\n    };\n\n    _this.purchaseContinueHandler = function () {\n      // alert('You continue!');\n      var queryParams = [];\n\n      for (var i in _this.state.ingredients) {\n        queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(_this.state.ingredients[i]));\n      }\n\n      queryParams.push('price=' + _this.state.totalPrice);\n      var queryString = queryParams.join('&');\n\n      _this.props.history.push({\n        pathname: '/checkout',\n        search: '?' + queryString\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BurgerBuilder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.props); // axios.get( 'https://burgerbuilder-166d7.firebaseio.com/ingredients.json' )\n      //     .then( response => {\n      //         this.setState( { ingredients: response.data } );\n      //     } )\n      //     .catch( error => {\n      //         this.setState( { error: true } );\n      //     } );\n    }\n  }, {\n    key: \"updatePurchaseState\",\n    value: function updatePurchaseState(ingredients) {\n      var sum = Object.keys(ingredients).map(function (igKey) {\n        return ingredients[igKey];\n      }).reduce(function (sum, el) {\n        return sum + el;\n      }, 0);\n      return sum > 0;\n    } // addIngredientHandler = ( type ) => {\n    //     const oldCount = this.state.ingredients[type];\n    //     const updatedCount = oldCount + 1;\n    //     const updatedIngredients = {\n    //         ...this.state.ingredients\n    //     };\n    //     updatedIngredients[type] = updatedCount;\n    //     const priceAddition = INGREDIENT_PRICES[type];\n    //     const oldPrice = this.state.totalPrice;\n    //     const newPrice = oldPrice + priceAddition;\n    //     this.setState( { totalPrice: newPrice, ingredients: updatedIngredients } );\n    //     this.updatePurchaseState( updatedIngredients );\n    // }\n    // removeIngredientHandler = ( type ) => {\n    //     const oldCount = this.state.ingredients[type];\n    //     if ( oldCount <= 0 ) {\n    //         return;\n    //     }\n    //     const updatedCount = oldCount - 1;\n    //     const updatedIngredients = {\n    //         ...this.state.ingredients\n    //     };\n    //     updatedIngredients[type] = updatedCount;\n    //     const priceDeduction = INGREDIENT_PRICES[type];\n    //     const oldPrice = this.state.totalPrice;\n    //     const newPrice = oldPrice - priceDeduction;\n    //     this.setState( { totalPrice: newPrice, ingredients: updatedIngredients } );\n    //     this.updatePurchaseState( updatedIngredients );\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var disabledInfo = _objectSpread({}, this.props.ings);\n\n      for (var key in disabledInfo) {\n        disabledInfo[key] = disabledInfo[key] <= 0;\n      }\n\n      var orderSummary = null;\n      var burger = this.state.error ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Ingredients can't be loaded!\") : React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      });\n\n      if (this.props.ings) {\n        burger = React.createElement(Aux, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(Burger, {\n          ingredients: this.props.ings,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }), React.createElement(BuildControls, {\n          ingredientAdded: this.props.onIngredientAdded,\n          ingredientRemoved: this.props.onIngredientRemoved,\n          disabled: disabledInfo,\n          purchasable: this.updatePurchaseState(this.props.ings),\n          ordered: this.purchaseHandler,\n          price: this.props.price,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }));\n        orderSummary = React.createElement(OrderSummary, {\n          ingredients: this.props.ings,\n          price: this.props.price,\n          purchaseCancelled: this.purchaseCancelHandler,\n          purchaseContinued: this.purchaseContinueHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.loading) {\n        orderSummary = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        });\n      } // {salad: true, meat: false, ...}\n\n\n      return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, orderSummary), burger);\n    }\n  }]);\n\n  return BurgerBuilder;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    ings: state.ingredients,\n    price: state.totalPrice\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onIngredientAdded: function onIngredientAdded(ingName) {\n      return dispatch({\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: ingName\n      });\n    },\n    onIngredientRemoved: function onIngredientRemoved(ingName) {\n      return dispatch({\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: ingName\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["/home/kiran/burgerbuilder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","connect","Aux","Burger","BuildControls","Modal","OrderSummary","Spinner","withErrorHandler","axios","actionTypes","BurgerBuilder","state","totalPrice","purchasing","loading","error","purchaseHandler","setState","purchaseCancelHandler","purchaseContinueHandler","queryParams","i","ingredients","push","encodeURIComponent","queryString","join","props","history","pathname","search","console","log","sum","Object","keys","map","igKey","reduce","el","disabledInfo","ings","key","orderSummary","burger","onIngredientAdded","onIngredientRemoved","updatePurchaseState","price","mapStateToProps","mapDispatchToProps","dispatch","ingName","type","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/spinner/spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport axios from '../../axios-orders';\nimport * as actionTypes from '../../store/actions';\n\n\nclass BurgerBuilder extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {...}\n    // }\n    state = {\n        totalPrice: 4,\n        purchasing: false,\n        loading: false,\n        error: false\n    }\n\n    componentDidMount () {\n        console.log(this.props);\n        // axios.get( 'https://burgerbuilder-166d7.firebaseio.com/ingredients.json' )\n        //     .then( response => {\n        //         this.setState( { ingredients: response.data } );\n        //     } )\n        //     .catch( error => {\n        //         this.setState( { error: true } );\n        //     } );\n    }\n\n    updatePurchaseState ( ingredients ) {\n        const sum = Object.keys( ingredients )\n            .map( igKey => {\n                return ingredients[igKey];\n            } )\n            .reduce( ( sum, el ) => {\n                return sum + el;\n            }, 0 );\n        return sum > 0 ;\n    }\n\n    // addIngredientHandler = ( type ) => {\n    //     const oldCount = this.state.ingredients[type];\n    //     const updatedCount = oldCount + 1;\n    //     const updatedIngredients = {\n    //         ...this.state.ingredients\n    //     };\n    //     updatedIngredients[type] = updatedCount;\n    //     const priceAddition = INGREDIENT_PRICES[type];\n    //     const oldPrice = this.state.totalPrice;\n    //     const newPrice = oldPrice + priceAddition;\n    //     this.setState( { totalPrice: newPrice, ingredients: updatedIngredients } );\n    //     this.updatePurchaseState( updatedIngredients );\n    // }\n\n    // removeIngredientHandler = ( type ) => {\n    //     const oldCount = this.state.ingredients[type];\n    //     if ( oldCount <= 0 ) {\n    //         return;\n    //     }\n    //     const updatedCount = oldCount - 1;\n    //     const updatedIngredients = {\n    //         ...this.state.ingredients\n    //     };\n    //     updatedIngredients[type] = updatedCount;\n    //     const priceDeduction = INGREDIENT_PRICES[type];\n    //     const oldPrice = this.state.totalPrice;\n    //     const newPrice = oldPrice - priceDeduction;\n    //     this.setState( { totalPrice: newPrice, ingredients: updatedIngredients } );\n    //     this.updatePurchaseState( updatedIngredients );\n    // }\n\n    purchaseHandler = () => {\n        this.setState( { purchasing: true } );\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState( { purchasing: false } );\n    }\n\n    purchaseContinueHandler = () => {\n        // alert('You continue!');\n        \n        const queryParams = [];\n        for (let i in this.state.ingredients) {\n            queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n        }\n        queryParams.push('price=' + this.state.totalPrice);\n        const queryString = queryParams.join('&');\n        this.props.history.push({\n            pathname: '/checkout',\n            search: '?' + queryString\n        });\n    }\n\n    render () {\n        const disabledInfo = {\n            ...this.props.ings\n        };\n        for ( let key in disabledInfo ) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        let orderSummary = null;\n        let burger = this.state.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\n\n        if ( this.props.ings ) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls\n                        ingredientAdded={this.props.onIngredientAdded}\n                        ingredientRemoved={this.props.onIngredientRemoved}\n                        disabled={disabledInfo}\n                        purchasable={this.updatePurchaseState(this.props.ings)}\n                        ordered={this.purchaseHandler}\n                        price={this.props.price} />\n                </Aux>\n            );\n            orderSummary = <OrderSummary\n                ingredients={this.props.ings}\n                price={this.props.price}\n                purchaseCancelled={this.purchaseCancelHandler}\n                purchaseContinued={this.purchaseContinueHandler} />;\n        }\n        if ( this.state.loading ) {\n            orderSummary = <Spinner />;\n        }\n        // {salad: true, meat: false, ...}\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state =>{\n    return {\n        ings: state.ingredients,\n        price: state.totalPrice\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch({type: actionTypes.ADD_INGREDIENT, ingredientName: ingName}), \n        onIngredientRemoved: (ingName) => dispatch({type: actionTypes.REMOVE_INGREDIENT, ingredientName: ingName}) \n\n    }\n}\n\n    export default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler( BurgerBuilder, axios ));"]},"metadata":{},"sourceType":"module"}