{"ast":null,"code":"import _defineProperty from \"/home/kiran/burgerbuilder/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/kiran/burgerbuilder/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from '../actions/actionTypes';\nvar initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false\n};\nvar INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return _objectSpread({}, state, {\n        ingredients: _objectSpread({}, state.ingredients, _defineProperty({}, action.ingredientName, state.ingredients[action.ingredientName] + 1)),\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n      });\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return _objectSpread({}, state, {\n        ingredients: _objectSpread({}, state.ingredients, _defineProperty({}, action.ingredientName, state.ingredients[action.ingredientName] - 1)),\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n      });\n\n    case actionTypes.SET_INGREDIENTS:\n      return _objectSpread({}, state, {\n        ingredients: {\n          salad: action.ingredients.salad,\n          bacon: action.ingredients.bacon,\n          cheese: action.ingredients.cheese,\n          meat: action.ingredients.meat\n        },\n        error: false\n      });\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return _objectSpread({}, state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/kiran/burgerbuilder/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","initialState","ingredients","totalPrice","error","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","state","action","type","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":";;AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,IADI;AAEjBC,EAAAA,UAAU,EAAE,CAFK;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAOA,IAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,GADe;AAEtBC,EAAAA,MAAM,EAAE,GAFc;AAGtBC,EAAAA,IAAI,EAAE,GAHgB;AAItBC,EAAAA,KAAK,EAAE;AAJe,CAA1B;;AAOA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBV,YAAyB;AAAA,MAAXW,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,WAAW,CAACc,cAAjB;AACI,+BACOH,KADP;AAEIT,QAAAA,WAAW,oBACJS,KAAK,CAACT,WADF,sBAENU,MAAM,CAACG,cAFD,EAEkBJ,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACG,cAAzB,IAA2C,CAF7D,EAFf;AAOIZ,QAAAA,UAAU,EAAEQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACG,cAAR;AAPpD;;AASJ,SAAKf,WAAW,CAACgB,iBAAjB;AACA,+BACOL,KADP;AAEIT,QAAAA,WAAW,oBACJS,KAAK,CAACT,WADF,sBAENU,MAAM,CAACG,cAFD,EAEkBJ,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACG,cAAzB,IAA2C,CAF7D,EAFf;AAMIZ,QAAAA,UAAU,EAAEQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACG,cAAR;AANpD;;AASA,SAAKf,WAAW,CAACiB,eAAjB;AACA,+BACON,KADP;AAEIT,QAAAA,WAAW,EAAC;AACRI,UAAAA,KAAK,EAAEM,MAAM,CAACV,WAAP,CAAmBI,KADlB;AAERG,UAAAA,KAAK,EAAEG,MAAM,CAACV,WAAP,CAAmBO,KAFlB;AAGRF,UAAAA,MAAM,EAAEK,MAAM,CAACV,WAAP,CAAmBK,MAHnB;AAIRC,UAAAA,IAAI,EAAEI,MAAM,CAACV,WAAP,CAAmBM;AAJjB,SAFhB;AASIJ,QAAAA,KAAK,EAAE;AATX;;AAYA,SAAKJ,WAAW,CAACkB,wBAAjB;AACA,+BACOP,KADP;AAEIP,QAAAA,KAAK,EAAE;AAFX;;AAKA;AACI,aAAOO,KAAP;AAzCR;AA4CH,CA7CD;;AA+CA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false \n};\n\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_INGREDIENT:\n            return{\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n                },\n\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n            }\n        case actionTypes.REMOVE_INGREDIENT:\n        return{\n            ...state,\n            ingredients: {\n                ...state.ingredients,\n                [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n            },\n            totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n\n        }\n        case actionTypes.SET_INGREDIENTS: \n        return {\n            ...state,\n            ingredients:{\n                salad: action.ingredients.salad,\n                bacon: action.ingredients.bacon,\n                cheese: action.ingredients.cheese,\n                meat: action.ingredients.meat\n\n            },\n            error: false\n        }\n\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\n        return{\n            ...state,\n            error: true\n        }\n\n        default: \n            return state;\n    }\n\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}