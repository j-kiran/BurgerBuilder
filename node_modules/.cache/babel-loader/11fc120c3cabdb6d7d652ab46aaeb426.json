{"ast":null,"code":"import _classCallCheck from \"/home/kiran/burgerbuilder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/kiran/burgerbuilder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/kiran/burgerbuilder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/kiran/burgerbuilder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/kiran/burgerbuilder/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/kiran/burgerbuilder/src/containers/Checkout/ContactData/ContactData.js\";\nimport React, { Component } from 'react';\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/spinner/spinner';\nimport classes from './ContactData.css';\nimport axios from '../../../axios-orders';\nimport Input from '../../../components/UI/Input/Input';\n\nvar ContactData =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactData, _Component);\n\n  function ContactData() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ContactData);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ContactData)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      orderForm: {\n        name: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'your Name'\n          },\n          value: ''\n        },\n        country: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'country'\n          },\n          value: ''\n        },\n        street: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'street'\n          },\n          value: ''\n        },\n        zipCode: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Zip Code'\n          },\n          value: ''\n        },\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'email',\n            placeholder: 'your Mail'\n          },\n          value: ''\n        },\n        deliveryMethod: {\n          elementType: 'select',\n          elementConfig: {\n            options: [{\n              value: 'fastest',\n              display: 'Fastest'\n            }][{\n              value: 'cheapest',\n              display: 'Cheapest'\n            }]\n          },\n          value: ''\n        }\n      }\n    };\n\n    _this.orderHandler = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        loading: true\n      });\n\n      var orders = {\n        ingredients: _this.props.ingredients,\n        price: _this.props.price\n      };\n      axios.post('/orders.json', orders).then(function (response) {\n        _this.setState({\n          loading: false\n        });\n\n        _this.props.history.push('/');\n      }).catch(function (error) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ContactData, [{\n    key: \"render\",\n    value: function render() {\n      var formElementArray = [];\n\n      for (var key in this.state.orderForm) {\n        formElementArray.push({\n          id: key,\n          config: this.state.orderForm[key]\n        });\n      }\n\n      var form = React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Input, {\n        elementType: \"...\",\n        elementConfig: \"...\",\n        value: \"...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), formElementArray.map(function (formElement) {\n        return React.createElement(Input, {\n          elementType: formElement.config.elementType,\n          elementConfig: formElement.config.elementConfig,\n          value: formElement.config.elementConfig,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        });\n      }), React.createElement(Button, {\n        btnType: \"Success\",\n        clicked: this.orderHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"ORDER\"));\n\n      if (this.state.loading) {\n        form = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: classes.ContactData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \" Enter your Contact Data\"), form);\n    }\n  }]);\n\n  return ContactData;\n}(Component);\n\nexport default ContactData;","map":{"version":3,"sources":["/home/kiran/burgerbuilder/src/containers/Checkout/ContactData/ContactData.js"],"names":["React","Component","Button","Spinner","classes","axios","Input","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","country","street","zipCode","email","deliveryMethod","options","display","orderHandler","event","preventDefault","setState","loading","orders","ingredients","props","price","post","then","response","history","push","catch","error","formElementArray","key","id","config","form","map","formElement"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/spinner/spinner';\nimport classes from './ContactData.css';\nimport axios from '../../../axios-orders';\nimport Input from '../../../components/UI/Input/Input';\n\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'your Name'\n                },\n                value:''\n            },\n            country: {\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'country'\n                },\n                value:''\n            },\n            street: {\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'street'\n                },\n                value:''\n            },\n            zipCode: {\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'Zip Code'\n                },\n                value:''\n            },\n            \n            email: {\n                elementType:'input',\n                elementConfig:{\n                    type:'email',\n                    placeholder:'your Mail'\n                },\n                value:''\n            },\n            deliveryMethod: {\n                elementType:'select',\n                elementConfig:{\n                    options: [{value:'fastest', display: 'Fastest'}]\n                             [{value:'cheapest', display: 'Cheapest'}]\n\n                },\n                value:''\n            }\n        }   \n    }   \n          orderHandler = (event) => {\n        event.preventDefault();\n           this.setState( { loading: true} );\n        const orders = {\n            ingredients: this.props.ingredients,\n            price: this.props.price,\n           \n        }\n       axios.post('/orders.json', orders)\n       .then(response => {\n           this.setState({ loading: false });\n           this.props.history.push('/');\n       })\n       .catch(error => {\n        this.setState({ loading: false });\n\n       } );\n    }\n\n    render () {\n        const formElementArray =[];\n        for (let key in this.state.orderForm){\n            formElementArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            })\n        }\n\n        let form = ( \n        <form>\n            <Input elementType=\"...\" elementConfig=\"...\" value='...' />\n                {formElementArray.map(formElement => (\n                    <Input elementType={formElement.config.elementType}\n                           elementConfig={formElement.config.elementConfig}\n                           value={formElement.config.elementConfig}  />\n                ))}\n            <Button btnType=\"Success\" clicked={this.orderHandler} >ORDER</Button>\n        </form>);\n\n        if (this.state.loading){\n            form = <Spinner />\n        }   \n\n        return(\n            <div className={classes.ContactData}>\n                <h4> Enter your Contact Data</h4>\n               {form}\n            \n            </div>\n        )\n    }\n}\n\nexport default ContactData;"]},"metadata":{},"sourceType":"module"}