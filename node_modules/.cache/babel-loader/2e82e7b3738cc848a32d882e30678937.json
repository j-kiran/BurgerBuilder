{"ast":null,"code":"import _objectSpread from \"/home/kiran/burgerbuilder/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\nexport var purchaseBurgerSuccess = function purchaseBurgerSuccess(id, orderData) {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    orderId: id,\n    orderData: orderData\n  };\n};\nexport var purchaseBurgerFail = function purchaseBurgerFail(error) {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAIL,\n    error: error\n  };\n};\nexport var purchaseBurgerStart = function purchaseBurgerStart() {\n  return {\n    type: actionTypes.PURCHASE_BURGER_START\n  };\n};\nexport var purchaseBurger = function purchaseBurger(orderData, token) {\n  return function (dispatch) {\n    dispatch(purchaseBurgerStart());\n    var queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n    axios.post('/orders.json' + queryParams);\n    axios.get('/orders.json' + queryParams).then(function (response) {\n      console.log(response.data);\n      dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n    }).catch(function (error) {\n      dispatch(purchaseBurgerFail(error));\n    });\n  };\n};\nexport var purchaseInit = function purchaseInit() {\n  return {\n    type: actionTypes.PURCHASE_INIT\n  };\n};\nexport var fetchOrdersSuccess = function fetchOrdersSuccess(orders) {\n  return {\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\n    orders: orders\n  };\n};\nexport var fetchOrdersFail = function fetchOrdersFail(error) {\n  return {\n    type: actionTypes.FETCH_ORDERS_FAIL,\n    error: error\n  };\n};\nexport var fetchOrdersStart = function fetchOrdersStart() {\n  return {\n    type: actionTypes.FETCH_ORDERS_START\n  };\n};\nexport var fetchOrders = function fetchOrders(token, userId) {\n  return function (dispatch) {\n    dispatch(fetchOrdersStart());\n    var queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n    axios.get('/orders.json?auth=' + token).then(function (res) {\n      var fetchedOrders = [];\n\n      for (var key in res.data) {\n        fetchedOrders.push(_objectSpread({}, res.data[key], {\n          id: key\n        }));\n      }\n\n      dispatch(fetchOrdersSuccess(fetchedOrders));\n    }).catch(function (err) {\n      dispatch(fetchOrdersFail(err));\n    });\n  };\n};","map":{"version":3,"sources":["/home/kiran/burgerbuilder/src/store/actions/order.js"],"names":["actionTypes","axios","purchaseBurgerSuccess","id","orderData","type","PURCHASE_BURGER_SUCCESS","orderId","purchaseBurgerFail","error","PURCHASE_BURGER_FAIL","purchaseBurgerStart","PURCHASE_BURGER_START","purchaseBurger","token","dispatch","queryParams","userId","post","get","then","response","console","log","data","name","catch","purchaseInit","PURCHASE_INIT","fetchOrdersSuccess","orders","FETCH_ORDERS_SUCCESS","fetchOrdersFail","FETCH_ORDERS_FAIL","fetchOrdersStart","FETCH_ORDERS_START","fetchOrders","res","fetchedOrders","key","push","err"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders'\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n         type: actionTypes.PURCHASE_BURGER_SUCCESS,\n         orderId: id,\n         orderData: orderData\n    };\n};\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    };\n}\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    };\n}\n\nexport const purchaseBurger = (orderData, token) => {\n    return dispatch => {\n        dispatch(purchaseBurgerStart());\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';        axios.post( '/orders.json' + queryParams )\n        axios.get( '/orders.json' + queryParams)\n        .then( response => {\n            console.log(response.data)\n            dispatch(purchaseBurgerSuccess(response.data.name, orderData) );\n        } )\n        .catch( error => {\n            dispatch(purchaseBurgerFail(error))\n        } );\n    };\n};\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    };\n};\n\nexport const fetchOrdersSuccess = ( orders ) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    }\n}\n\nexport const fetchOrdersFail = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n\n    }\n}\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    }\n}\n\nexport const fetchOrders = (token, userId) => {\n    return dispatch => {\n        dispatch(fetchOrdersStart());\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n        axios.get('/orders.json?auth=' + token)\n        .then(res => {\n            const fetchedOrders = [];\n            for(let key in res.data){\n                fetchedOrders.push({\n                    ...res.data[key],\n                    id: key\n                })\n            }\n            dispatch(fetchOrdersSuccess(fetchedOrders));\n        })\n        .catch(err => {\n            dispatch(fetchOrdersFail(err));\n        });\n    }\n}"]},"metadata":{},"sourceType":"module"}