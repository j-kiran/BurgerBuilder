{"ast":null,"code":"import _classCallCheck from \"/home/kiran/burgerbuilder/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/kiran/burgerbuilder/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/kiran/burgerbuilder/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/kiran/burgerbuilder/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/kiran/burgerbuilder/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/kiran/burgerbuilder/src/containers/Orders/Orders.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/spinner/spinner';\n\nvar Orders =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Orders, _Component);\n\n  function Orders() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Orders);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Orders)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      orders: [],\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(Orders, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onFetchOrders(this.props.token);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var orders = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      });\n\n      if (!this.props.loading) {\n        orders = this.props.orders.map(function (order) {\n          return React.createElement(Order, {\n            key: order.id,\n            ingredients: order.ingredients,\n            price: order.price,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24\n            },\n            __self: this\n          });\n        });\n      }\n\n      ;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, orders);\n    }\n  }]);\n\n  return Orders;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onFetchOrders: function onFetchOrders(token, userId) {\n      return dispatch(actions.fetchOrders(token, userId));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","map":{"version":3,"sources":["/home/kiran/burgerbuilder/src/containers/Orders/Orders.js"],"names":["React","Component","connect","Order","axios","withErrorHandler","actions","Spinner","Orders","state","orders","loading","props","onFetchOrders","token","map","order","id","ingredients","price","mapStateToProps","auth","userId","mapDispatchToProps","dispatch","fetchOrders"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAyB,aAAzB;AAEA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,OAAOC,OAAP,MAAoB,qCAApB;;IAEMC,M;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,OAAO,EAAE;AAFL,K;;;;;;wCAKW;AACf,WAAKC,KAAL,CAAWC,aAAX,CAAyB,KAAKD,KAAL,CAAWE,KAApC;AACH;;;6BAES;AACN,UAAIJ,MAAM,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb;;AACA,UAAG,CAAC,KAAKE,KAAL,CAAWD,OAAf,EAAwB;AACpBD,QAAAA,MAAM,GAAG,KAAKE,KAAL,CAAWF,MAAX,CAAkBK,GAAlB,CAAsB,UAAAC,KAAK;AAAA,iBAChC,oBAAC,KAAD;AACI,YAAA,GAAG,EAAIA,KAAK,CAACC,EADjB;AAEI,YAAA,WAAW,EAAED,KAAK,CAACE,WAFvB;AAGI,YAAA,KAAK,EAAEF,KAAK,CAACG,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADgC;AAAA,SAA3B,CAAT;AAMH;;AAAA;AACD,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEKT,MAFL,CADA;AAQH;;;;EA5BgBT,S;;AA+BrB,IAAOmB,eAAe,GAAG,SAAlBA,eAAkB,CAAAX,KAAK,EAAI;AAC9B,SAAO;AACHC,IAAAA,MAAM,EAACD,KAAK,CAACO,KAAN,CAAYN,MADhB;AAEHC,IAAAA,OAAO,EAAEF,KAAK,CAACO,KAAN,CAAYL,OAFlB;AAGHG,IAAAA,KAAK,EAAEL,KAAK,CAACY,IAAN,CAAWP,KAHf;AAIHQ,IAAAA,MAAM,EAAEb,KAAK,CAACY,IAAN,CAAWC;AAJhB,GAAP;AAMH,CAPD;;AASA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHX,IAAAA,aAAa,EAAE,uBAACC,KAAD,EAAQQ,MAAR;AAAA,aAAmBE,QAAQ,CAAClB,OAAO,CAACmB,WAAR,CAAoBX,KAApB,EAA2BQ,MAA3B,CAAD,CAA3B;AAAA;AADZ,GAAP;AAGH,CAJD;;AAMA,eAAepB,OAAO,CAACkB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ClB,gBAAgB,CAACG,MAAD,EAASJ,KAAT,CAA7D,CAAf","sourcesContent":["import React,{ Component } from 'react';\nimport { connect  } from 'react-redux';\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/spinner/spinner';\n\nclass Orders extends Component {\n    state = {\n        orders: [],\n        loading: true\n    }\n\n    componentDidMount(){\n        this.props.onFetchOrders(this.props.token);\n    }\n\n    render () {\n        let orders = <Spinner />\n        if(!this.props.loading) {\n            orders = this.props.orders.map(order => (\n                <Order\n                    key = {order.id}\n                    ingredients={order.ingredients}\n                    price={order.price} />\n            )    )\n        };\n        return ( \n        <div>\n            \n            {orders}\n        \n        </div>)\n          \n \n    }\n}\n\nconst  mapStateToProps = state => {\n    return {\n        orders:state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId \n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"]},"metadata":{},"sourceType":"module"}