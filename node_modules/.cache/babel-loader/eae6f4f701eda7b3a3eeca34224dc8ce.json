{"ast":null,"code":"import axios from 'axios';\nimport * as actionTypes from '../actions/actionTypes';\nexport var authStart = function authStart() {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport var authSuccess = function authSuccess(token, userId) {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId\n  };\n};\nexport var authFail = function authFail(error) {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport var logout = function logout() {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  localStorage.removeItem('userId');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport var checkAuthTimeout = function checkAuthTimeout(expirationDate) {\n  return function (dispatch) {\n    setTimeout(function () {\n      dispatch(logout());\n    }, expirationDate * 1000);\n  };\n};\nexport var auth = function auth(email, password, isSignup) {\n  return function (dispatch) {\n    dispatch(authStart());\n    var authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    var url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyBLhzwXbba7pIxbf5sXDSPXLeWKwkhcE5k';\n\n    if (!isSignup) {\n      url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyBLhzwXbba7pIxbf5sXDSPXLeWKwkhcE5k';\n    }\n\n    axios.post(url, authData).then(function (response) {\n      console.log(response);\n      var expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 10000);\n      localStorage.setItem('token', response.data.idToken);\n      localStorage.setItem('expirationDate', expirationDate);\n      localStorage.setItem('userId', response.data.localId);\n      dispatch(authSuccess(response.data.idToken, response.data.localId));\n      dispatch(checkAuthTimeout(response.data.expiresIn));\n    }).catch(function (err) {\n      dispatch(authFail(err.response.data.error));\n    });\n  };\n};\nexport var setAuthRedirectPath = function setAuthRedirectPath(path) {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\nexport var authCheckState = function authCheckState() {\n  return function (dispatch) {\n    var token = localStorage.getItem('token');\n\n    if (!token) {\n      dispatch(logout());\n    } else {\n      var expirationDate = localStorage.getItem('expirationDate');\n\n      if (expirationDate > new Date()) {\n        var userId = localStorage.getItem('userId');\n        dispatch(authSuccess(token, userId));\n        dispatch(checkAuthTimeout(expirationDate.getSeconds() - new Date.getSeconds()));\n      } else {\n        dispatch(logout());\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/home/kiran/burgerbuilder/src/store/actions/auth.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","idToken","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationDate","dispatch","setTimeout","auth","email","password","isSignup","authData","returnSecureToken","url","post","then","response","console","log","Date","getTime","data","expiresIn","setItem","localId","catch","err","setAuthRedirectPath","path","SET_AUTH_REDIRECT_PATH","authCheckState","getItem","getSeconds"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport * as actionTypes from '../actions/actionTypes';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        idToken: token,\n        userId: userId\n\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n\n\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\nexport const checkAuthTimeout = (expirationDate) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationDate * 1000);\n    }\n}\n\nexport const auth = (email, password, isSignup) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        };\n        let url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyBLhzwXbba7pIxbf5sXDSPXLeWKwkhcE5k';\n        if(!isSignup) {\n            url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyBLhzwXbba7pIxbf5sXDSPXLeWKwkhcE5k';\n\n        }\n        axios.post(url, authData)\n        .then(response => {\n            console.log(response);\n            const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 10000);\n            localStorage.setItem('token', response.data.idToken);\n            localStorage.setItem('expirationDate', expirationDate) ;\n            localStorage.setItem('userId', response.data.localId);\n            dispatch(authSuccess(response.data.idToken, response.data.localId));\n            dispatch(checkAuthTimeout(response.data.expiresIn));\n        })\n        .catch(err => {\n            dispatch(authFail(err.response.data.error));\n        });\n    \n        \n    };\n};\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token =localStorage.getItem('token');\n        if(!token){\n            dispatch(logout());\n        }\n        else{\n            const expirationDate = localStorage.getItem('expirationDate');\n            if(expirationDate > new Date()){\n                const userId = localStorage.getItem('userId');\n                dispatch(authSuccess(token, userId));\n                dispatch(checkAuthTimeout(expirationDate.getSeconds() - new Date.getSeconds()))\n            } else {\n                dispatch(logout());\n            }\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}